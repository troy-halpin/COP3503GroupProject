// User class
#include <string>
#include <stdio.h>      /* printf, scanf, puts, NULL */
#include <stdlib.h>     /* srand, rand */
#include <time.h>       /* time */
#include <sstream>

using namespace std;

class User
{
	string userName;
	string hashedPassword;
	string userSalt;
	string realName;
	string saltedAP;
	//ofstream userInfo;
	//Account[3] userAccounts;

public:

	User(string realNameInput, string userNameInput, string pw) // new user
	{
		realName = realNameInput;
		userName = userNameInput;
		userSalt = generateSalt();
		string saltedPassword = pw += userSalt;
		hashedPassword = hashPassword(saltedPassword);
		saltedAP = "";
	}

	User(string realNameInput, string userNameInput, string realPass, string salt, string attemptedPass)	// existing user
	{
		realName = realNameInput;
		userName = userNameInput;
		userSalt = salt;
		string realSaltedPass = realPass += userSalt;
		hashedPassword = hashPassword(realSaltedPass);
		saltedAP = attemptedPass += userSalt;
	}

	string getUsername()
	{
		return userName;
	}

	string generateSalt()
	{
		/* initialize random seed: */
  		srand (time(NULL));
  		int saltInt = rand() % 1000 + 1;
  		saltInt += 370;
  		string salt = to_string(saltInt);

  		return salt;
	}

	string hashPassword(string originalPassword) 
	{
		// algo here
		originalPassword += "nowhashed";
		return originalPassword;
	}

	string getHashedPassword()
	{
		return hashedPassword;
	}

	bool correctPassword()
	{
		string hashedAP = hashPassword(saltedAP);

		if (hashedAP == hashedPassword)
		{
			return true;
		}

		else
		{
			return false;
		}
	}

	void userInfoExport()
	{
		// jordan
	}

	void userInfoImport()
	{
		// probably unnecessary, a different function should do this outside of the class, and then the info used in the constructor
	}

	string to_string(int num)
	{
		ostringstream numToString;
		numToString << num;
		return numToString.str() ;
	}
};
